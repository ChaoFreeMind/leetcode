The only difference between this problem and its predecessor is one constraint: the last one and first one can not be robbed at the same time. We can resolve it by splitting it into 2 cases: rob last one or not. If we decide to rob last one, then we can not rob the first one and the second last one, which is basically rob[1, nums.length - 1 - 2]. If we decide not to rob the last house, then we are looking at rob[0, nums.length - 1 - 1]. We can write a helper function to compute the max money we can collect from a range of houses.